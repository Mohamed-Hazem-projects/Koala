// <auto-generated />
using KoalaInventoryManagement.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoalaInventoryManagement.Migrations
{
    [DbContext(typeof(InventoryDBContext))]
    [Migration("20241001230009_CreateWareHousesAndProducts(PrdsNotComplete)WithTheirRelations")]
    partial class CreateWareHousesAndProductsPrdsNotCompleteWithTheirRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoalaInventoryManagement.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Flags Products",
                            Name = "Palestine Flag",
                            Price = 9m
                        },
                        new
                        {
                            ID = 2,
                            Description = "Guns Products",
                            Name = "Gun AK-74",
                            Price = 1000m
                        },
                        new
                        {
                            ID = 3,
                            Description = "Food Products",
                            Name = "زبادي",
                            Price = 3m
                        });
                });

            modelBuilder.Entity("KoalaInventoryManagement.Models.WareHouse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("WareHouses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Section A"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Section B"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Section C"
                        });
                });

            modelBuilder.Entity("KoalaInventoryManagement.Models.WareHouseProduct", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.Property<short>("CurrentStock")
                        .HasColumnType("smallint");

                    b.Property<short>("MaxStock")
                        .HasColumnType("smallint");

                    b.Property<short>("MinStock")
                        .HasColumnType("smallint");

                    b.HasKey("ProductID", "WareHouseID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("WareHouseProducts");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            WareHouseID = 1,
                            CurrentStock = (short)20,
                            MaxStock = (short)50,
                            MinStock = (short)10
                        },
                        new
                        {
                            ProductID = 1,
                            WareHouseID = 2,
                            CurrentStock = (short)15,
                            MaxStock = (short)40,
                            MinStock = (short)5
                        },
                        new
                        {
                            ProductID = 2,
                            WareHouseID = 3,
                            CurrentStock = (short)12,
                            MaxStock = (short)30,
                            MinStock = (short)7
                        },
                        new
                        {
                            ProductID = 2,
                            WareHouseID = 1,
                            CurrentStock = (short)8,
                            MaxStock = (short)25,
                            MinStock = (short)3
                        },
                        new
                        {
                            ProductID = 3,
                            WareHouseID = 2,
                            CurrentStock = (short)5,
                            MaxStock = (short)10,
                            MinStock = (short)4
                        },
                        new
                        {
                            ProductID = 3,
                            WareHouseID = 3,
                            CurrentStock = (short)20,
                            MaxStock = (short)50,
                            MinStock = (short)15
                        });
                });

            modelBuilder.Entity("KoalaInventoryManagement.Models.WareHouseProduct", b =>
                {
                    b.HasOne("KoalaInventoryManagement.Models.Product", "Product")
                        .WithMany("WareHouseProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoalaInventoryManagement.Models.WareHouse", "WareHouse")
                        .WithMany("WareHouseProducts")
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("KoalaInventoryManagement.Models.Product", b =>
                {
                    b.Navigation("WareHouseProducts");
                });

            modelBuilder.Entity("KoalaInventoryManagement.Models.WareHouse", b =>
                {
                    b.Navigation("WareHouseProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
