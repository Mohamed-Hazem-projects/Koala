@using Newtonsoft.Json
@using System.Linq;
@model Inventory.Data.Models.PaginatedList<KoalaInventoryManagement.ViewModels.Products.ProductViewModel>

@{
    ViewData["Title"] = "Inventory";
    var serializedFilteredProducts = JsonConvert.SerializeObject(Model.Items.DistinctBy(p => p.Id) ?? new List<ProductViewModel>());
    var getFilteredProductsUrl = Url.Action("GetFilteredProducts", "Inventory");
}

<link rel="stylesheet" href="~/css/Suppliers/suppliers.css" />
<link href="~/css/inventory/inventory.css" rel="stylesheet" />
<div class="container-fluid p-0 suppliers">
    <!-- Products Header Start -->
    <div class="content-header">
        <div class=" heading">
            <h1 class="header-title roboto">Products Page</h1>
            <p class="header-subtitle roboto">Manage your products with their warehouses.</p>
        </div>
    </div>
    <!-- Products Header End -->
<!-- Filteration Start -->
<div class="d-flex justify-content-center align-items-center flex-column">
    <br />
    <input id="searchInput" class="form-control" style="width:500px;font-size:large" type="text" placeholder="Search products..." />
    <input type="hidden" id="filteredProductsData" value='@Html.Raw(serializedFilteredProducts)' />
    <input type="hidden" id="getFilteredProductsUrl" value="@getFilteredProductsUrl" />
    <br />
    <div class="d-flex justify-content-center align-items-center gap-3" style="width:auto">
        <!-- WareHouse Filter Button Start -->
  
            <select id="wareHouseID" class="form-select" name="warehouseId" aria-label="Default select example">
                <option selected>All Warehouses</option>
                @foreach (var warehouse in ViewBag.WareHouses as List<WareHouse>)
                {
                    if (ViewBag.SelectedWareHouse > 0 && warehouse.Id == ViewBag.SelectedWareHouse)
                    {
                        <option selected value="@warehouse.Id">@warehouse.Name</option>
                        continue;
                    }
                    <option value="@warehouse.Id">@warehouse.Name</option>
                }
            </select>
        <!-- Category Filter Button Start -->
        <select id="categoryID" class="form-select" name="categoryID" aria-label="Default select example">
            <option selected>All Categories</option>
            @foreach (var category in Model.Items.GroupBy(p => p.CategoryName).Select(g => g.First()))
            {
                if (ViewBag.SelectedCategory > 0 && category.CategoryID == ViewBag.SelectedCategory)
                {
                    <option selected value="@category.CategoryID">@category.CategoryName</option>
                    continue;
                }
                <option value="@category.CategoryID">@category.CategoryName</option>
            }
        </select>
        <!-- Category Filter Button End -->

        <!-- Supplier Filter Button Start -->
        <select id="supplierID" class="form-select" name="supplierID" aria-label="Default select example">
            <option selected>All Suppliers</option>
            @foreach (var supplier in Model.Items.GroupBy(p => p.SupplierName).Select(g => g.First()))
            {
                if (ViewBag.SelectedSupplier > 0 && supplier.SupplierID == ViewBag.SelectedSupplier)
                {
                    <option selected value="@supplier.SupplierID">@supplier.SupplierName</option>
                    continue;
                }
                <option value="@supplier.SupplierID">@supplier.SupplierName</option>
            }
        </select>
        <!-- Supplier Filter Button End -->
    </div>
    <br />
</div>
<!-- Filteration End -->


<!-- Products Table Start -->
<div class="bg-offwhite">
    <div class="col-lg-12 p-3">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title roboto">Products</h4>
                <button class="add-btn" type="button" data-bs-toggle="modal" data-bs-target="#productModal">Add</button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="productsTable" class="table table-bordered verticle-middle table-responsive-sm">
                        <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Description</th>
                                <th scope="col">Price</th>
                                <th scope="col">Image</th>
                                <th class="btn-head" scope="col">Info</th>
                                <th class="btn-head" scope="col">Edit</th>
                                <th class="btn-head" scope="col">Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model.Items)
                            {
                                <tr>
                                    <td>@product.Name</td>
                                    <td>@product.Description</td>
                                    <td>$&nbsp;@product.Price</td>
                                    <td>@product.Image</td>
                                    <td>
                                        <a href="/Inventory/ShowDetails/@product.Id" class="btn btn-labeled">
                                            <i class="fa fa-info-circle color-info"></i>
                                        </a>
                                    </td>
                                    <td class="btn-td edit">
                                        <a onclick="openEditModalProduct(@product.Id, @product.WareHouseID, @product.CategoryID, @product.SupplierID,
                                            '@product.Name', '@product.Description', @product.Price, '@product.Image',@product.CurrentStock,
                                            @product.MinStock, @product.MaxStock, '@product.CategoryName', '@product.SupplierName')">
                                            <i class="fa fa-pencil color-edit"></i>
                                        </a>
                                    </td>
                                    <td class="btn-td delete">
                                        <a onclick="confirmDelete('@product.Name Product', @product.Id)">
                                            <i class="fa fa-close color-danger"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Products Table End -->
<!-- Paging -->
<div class="row">
    <div class="col-md-6">
        <span>Page @(Model.PageIndex) of @(Model.TotalPages)</span>
    </div>
    <div class="col-md-6">
        <nav>
            <ul class="pagination justify-content-end">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-route-pageNumber="1" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First</a>
                </li>
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Previous</a>
                </li>

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                        <a class="page-link" asp-route-pageNumber="@i" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                    </li>
                }

                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Next</a>
                </li>
                <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-route-pageNumber="@Model.TotalPages" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Add or Edit Product Modal Start-->
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Add Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" action="/Inventory/AddProduct" id="addOrEditProductForm">
                    <input type="hidden" name="Id" value="" />
                    <input type="hidden" name="oldWareHouseID" value="" />

                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" name="Name" class="form-control" required minlength="2" maxlength="50" placeholder="Name" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <input type="text" name="Description" class="form-control" required placeholder="Description" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Price</label>
                        <input type="text" name="Price" class="form-control" placeholder="Price" required pattern="^\d+(\.\d{1,2})?$" />
                    </div>

                    <div id="warehouse" class="mb-3">
                        <label class="form-label">Warehouses</label>
                        <select id="wareHouseSelector" name="WareHouseID" class="form-control" required>
                            <option value="" disabled selected>Select Warehouse</option>
                                @foreach (var warehouse in ViewBag.WareHouses as List<WareHouse>)
                                {
                                    <option value="@warehouse.Id">@warehouse.Name</option>
                                }
                        </select>
                    </div>

                        <div id="currentstock" class="mb-3">
                        <label class="form-label">Current Stock</label>
                        <input type="number" name="CurrentStock" class="form-control" placeholder="Current Stock" required min="0" />
                    </div>

                    <div id="minstock" class="mb-3">
                        <label class="form-label">Minimum Stock</label>
                        <input type="number" name="MinStock" class="form-control" placeholder="Minimum Stock" required min="0" />
                    </div>

                    <div id="maxstock" class="mb-3">
                        <label class="form-label">Maximum Stock</label>
                        <input type="number" name="MaxStock" class="form-control" placeholder="Maximum Stock" required min="0" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Supplier</label>
                        <select id="supplierSelector" name="SupplierId" class="form-control" required>
                            <option value="" disabled selected>Select Supplier</option>
                            @foreach (var supplier in Model.Items.DistinctBy(s => s.SupplierName))
                            {
                                <option value="@supplier.SupplierID">@supplier.SupplierName</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Category</label>
                        <select id="categorySelector" name="CategoryId" class="form-control" required>
                            <option value="" disabled selected>Select Category</option>
                            @foreach (var category in Model.Items.DistinctBy(c => c.CategoryName))
                            {
                                <option value="@category.CategoryID">@category.CategoryName</option>
                            }
                        </select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" id="addOrEditProduct" class="btn btn-primary">Add</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Add or Edit Product Modal End -->
<!-- Confirm Delete Start -->
<div class="overlay" onclick="closeConfirmDelete(event)"></div>
<div class="mainconfirm">
    <i class="fa-solid fa-xmark close" onclick="closeConfirmDelete(event)"></i>
    <i class="fa-regular fa-circle-xmark red"></i>
    <i class="fa-regular fa-circle-check green"></i>
    <h2>Are you sure?</h2>
    <p>Do you really want to delete the following?</p>
    <h3 id="toBeDeleted"></h3>
    <div class="buttons">
        <button class="close2" onclick="closeConfirmDelete(event)">Close</button>
        <button class="delete" onclick="startAnimation()">Delete</button>
    </div>
</div>
<!-- Confirm Delete End -->
@section Scripts {
    <script src="~/js/Inventory/Filteration.js"></script>
    <script src="~/js/Inventory/Inventory.js"></script>
}
